{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "MySQLPassword": {
      "Description": "Password of RDS User",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "64"
    },
    "InstanceType": {
      "Description": "Front EC2 instance type",
      "Type": "String",
      "Default": "t2.small",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "MasterInstanceType": {
      "Description": "Master EC2 instance type",
      "Type": "String",
      "Default": "t2.medium",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "RDSInstanceType": {
      "Description": "RDS instance type",
      "Type": "String",
      "Default": "db.m3.medium",
      "AllowedValues": [
        "db.t2.micro",
        "db.t2.small",
        "db.t2.medium",
        "db.m1.small",
        "db.m1.medium",
        "db.m1.large",
        "db.m1.xlarge",
        "db.m3.medium",
        "db.m3.large",
        "db.m3.xlarge",
        "db.m3.2xlarge",
        "db.m2.xlarge",
        "db.m2.2xlarge",
        "db.m2.4xlarge",
        "db.r3.large",
        "db.r3.xlarge",
        "db.r3.2xlarge",
        "db.r3.4xlarge",
        "db.r3.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "DBAllocatedStorage": {
      "Default": "20",
      "Description": "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "3072",
      "ConstraintDescription": "must be between 5 and 3072Gb."
    },
    "MultiAZDatabase": {
      "Default": "true",
      "Description": "Create a multi-AZ MySQL Amazon RDS database instance",
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "ConstraintDescription": "must be either true or false."
    }
  },
  "Mappings": {
    "MPAmimotov4": {
      "us-east-1": {
        "AMI": "ami-ca148fa2",
        "Location": "Virginia"
      },
      "us-west-2": {
        "AMI": "ami-83e8bfb3",
        "Location": "Oregon"
      },
      "us-west-1": {
        "AMI": "ami-950d1ed0",
        "Location": "N.California"
      },
      "eu-west-1": {
        "AMI": "ami-d275c8a5",
        "Location": "EU_Ireland"
      },
      "ap-southeast-1": {
        "AMI": "ami-bf725eed",
        "Location": "Singapore"
      },
      "ap-southeast-2": {
        "AMI": "ami-4fcfa675",
        "Location": "Sydney"
      },
      "ap-northeast-1": {
        "AMI": "ami-0e00030f",
        "Location": "Tokyo"
      },
      "sa-east-1": {
        "AMI": "ami-63de6e7e",
        "Location": "Sao_Paul"
      }
    }
  },
  "Resources": {
    "AmimotoFrontRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "AmazonEC2ReadOnlyAccess",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "ec2:Describe*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "AmimotoFrontRoleInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "AmimotoFrontRole"
          }
        ]
      }
    },
    "AmimotoVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "Tags": [
          {
            "Key": "Name",
            "Value": "mp-amimoto-vpc"
          }
        ]
      }
    },
    "AmimotoFrontSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mp-amimoto-front-subnet-1"
          }
        ]
      }
    },
    "AmimotoFrontSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mp-amimoto-front-subnet-2"
          }
        ]
      }
    },
    "AmimotoWithRDSNFSSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "CidrBlock": "10.0.10.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mp-amimoto-server-subnet"
          }
        ]
      }
    },
    "AmimotoRDSSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "CidrBlock": "10.0.101.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mp-amimoto-rds-subnet-1"
          }
        ]
      }
    },
    "AmimotoRDSSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "CidrBlock": "10.0.102.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mp-amimoto-rds-subnet-2"
          }
        ]
      }
    },
    "AmimotoInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "mp-amimoto-igw"
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "InternetGatewayId": {
          "Ref": "AmimotoInternetGateway"
        }
      }
    },
    "AmimotoRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mp-amimoto-rtb"
          }
        ]
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "AmimotoRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "AmimotoInternetGateway"
        }
      }
    },
    "SubnetRouteTableAssociationFront1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AmimotoFrontSubnet1"
        },
        "RouteTableId": {
          "Ref": "AmimotoRouteTable"
        }
      }
    },
    "SubnetRouteTableAssociationFront2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AmimotoFrontSubnet2"
        },
        "RouteTableId": {
          "Ref": "AmimotoRouteTable"
        }
      }
    },
    "SubnetRouteTableAssociationNFS": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AmimotoWithRDSNFSSubnet"
        },
        "RouteTableId": {
          "Ref": "AmimotoRouteTable"
        }
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone": "true",
        "Subnets": [
          {
            "Ref": "AmimotoFrontSubnet1"
          },
          {
            "Ref": "AmimotoFrontSubnet2"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "30",
          "Target": "TCP:80",
          "Timeout": "10",
          "UnhealthyThreshold": "2"
        },
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          },
          {
            "InstancePort": "443",
            "LoadBalancerPort": "443",
            "Protocol": "TCP",
            "InstanceProtocol": "TCP"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "sgAMIMOTO11AutogenByAWSMPELB"
          }
        ]
      }
    },
    "AmimotoFrontSG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": {
            "Ref": "AWS::Region"
          }
        },
        "VPCZoneIdentifier": [
          {
            "Ref": "AmimotoFrontSubnet1"
          },
          {
            "Ref": "AmimotoFrontSubnet2"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "AmimotoFrontLC"
        },
        "LoadBalancerNames": [
          {
            "Ref": "LoadBalancer"
          }
        ],
        "HealthCheckGracePeriod": "300",
        "MaxSize": "10",
        "MinSize": "3",
        "Tags": [
          {
            "Key": "Name",
            "Value": "mp-amimoto-ac-front",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    },
    "AmimotoFrontSP": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "AmimotoFrontSG"
        },
        "Cooldown": "180",
        "ScalingAdjustment": "1"
      }
    },
    "AmimotoFrontLC": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "/opt/aws/cloud_formation.json": {
                "source": "https://s3-ap-northeast-1.amazonaws.com/cf-amimoto-templates/cfn_file_templates/rds_nfs.json.template",
                "context": {
                  "endpoint": {
                    "Fn::GetAtt": [
                      "AmimotoRDS",
                      "Endpoint.Address"
                    ]
                  },
                  "password": {
                    "Ref": "MySQLPassword"
                  },
                  "serverid": {
                    "Ref": "AmimotoWithRDSNFS"
                  }
                },
                "mode": "00644",
                "owner": "root",
                "group": "root"
              }
            }
          }
        }
      },
      "Properties": {
        "AssociatePublicIpAddress": "true",
        "ImageId": {
          "Fn::FindInMap": [
            "MPAmimotov4",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "IamInstanceProfile": {
          "Ref": "AmimotoFrontRoleInstanceProfile"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "sgAMIMOTO11AutogenByAWSMP"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "/opt/aws/bin/cfn-init -s ",
                {
                  "Ref": "AWS::StackName"
                },
                " -r AmimotoFrontLC ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      }
    },
    "AmimotoWithRDSNFS": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "/opt/aws/cloud_formation.json": {
                "source": "https://s3-ap-northeast-1.amazonaws.com/cf-amimoto-templates/cfn_file_templates/rds_nfs.json.template",
                "context": {
                  "endpoint": {
                    "Fn::GetAtt": [
                      "AmimotoRDS",
                      "Endpoint.Address"
                    ]
                  },
                  "password": {
                    "Ref": "MySQLPassword"
                  },
                  "serverid": "dummy(value_will_update_by_AmimotoFrontLC)"
                },
                "mode": "00644",
                "owner": "root",
                "group": "root"
              }
            }
          }
        }
      },
      "Properties": {
        "DisableApiTermination": "FALSE",
        "ImageId": {
          "Fn::FindInMap": [
            "MPAmimotov4",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "InstanceType": {
          "Ref": "MasterInstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "Monitoring": "false",
        "NetworkInterfaces": [
          {
            "DeviceIndex": "0",
            "AssociatePublicIpAddress": "true",
            "SubnetId": {
              "Ref": "AmimotoWithRDSNFSSubnet"
            },
            "GroupSet": [
              {
                "Ref": "sgAMIMOTO11AutogenByAWSMPNFS"
              }
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "/opt/aws/bin/cfn-init -s ",
                {
                  "Ref": "AWS::StackName"
                },
                " -r AmimotoFrontLC ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mp-amimoto-server"
          }
        ]
      }
    },
    "AmimotoDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnets available for the RDS DB Instance",
        "SubnetIds": [
          {
            "Ref": "AmimotoRDSSubnet1"
          },
          {
            "Ref": "AmimotoRDSSubnet2"
          }
        ]
      }
    },
    "AmimotoRDS": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": {
          "Ref": "RDSInstanceType"
        },
        "Port": "3306",
        "AllocatedStorage": {
          "Ref": "DBAllocatedStorage"
        },
        "BackupRetentionPeriod": "1",
        "DBName": "wordpress",
        "Engine": "mysql",
        "MultiAZ": {
          "Ref": "MultiAZDatabase"
        },
        "MasterUsername": "amimoto",
        "MasterUserPassword": {
          "Ref": "MySQLPassword"
        },
        "PreferredBackupWindow": "00:00-00:30",
        "PreferredMaintenanceWindow": "sun:16:00-sun:17:30",
        "VPCSecurityGroups": [
          {
            "Ref": "sgAMIMOTO11AutogenByAWSMPforRDB"
          }
        ],
        "Tags": [
          {
            "Key": "workload-type",
            "Value": "other"
          }
        ],
        "DBSubnetGroupName": {
          "Ref": "AmimotoDBSubnetGroup"
        }
      }
    },
    "sgAMIMOTO11AutogenByAWSMPELB": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for AMIMOTO version 11 provided by DigitalCube Co Ltd",
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "sgAMIMOTO11AutogenByAWSMP": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for AMIMOTO version 11 provided by DigitalCube Co Ltd",
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "sgAMIMOTO11AutogenByAWSMPNFS": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for AMIMOTO version 11 provided by DigitalCube Co Ltd",
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "SourceSecurityGroupId": {
              "Ref": "sgAMIMOTO11AutogenByAWSMP"
            }
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "SourceSecurityGroupId": {
              "Ref": "sgAMIMOTO11AutogenByAWSMP"
            }
          }
        ]
      }
    },
    "sgAMIMOTO11AutogenByAWSMPforRDB": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for AMIMOTO JINKEI version 11 provided by DigitalCube Co Ltd",
        "VpcId": {
          "Ref": "AmimotoVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "SourceSecurityGroupId": {
              "Ref": "sgAMIMOTO11AutogenByAWSMP"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "SourceSecurityGroupId": {
              "Ref": "sgAMIMOTO11AutogenByAWSMPNFS"
            }
          }
        ]
      }
    }
  },
  "Description": "",
  "Outputs": {
    "WebSiteURL": {
      "Description": "WordPress Site URL (Please wait a few minutes for the upgrade of WordPress to access for the first time.)",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "LoadBalancer",
                "DNSName"
              ]
            }
          ]
        ]
      }
    },
    "RDSEndpoint": {
      "Description": "Endpoint of RDS",
      "Value": {
        "Fn::GetAtt": [
          "AmimotoRDS",
          "Endpoint.Address"
        ]
      }
    }
  }
}
